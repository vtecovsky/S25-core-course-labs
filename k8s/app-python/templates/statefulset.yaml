apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-python.fullname" . }}
  labels:
    {{- include "app-python.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 1
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  selector:
    matchLabels:
      {{- include "app-python.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "app-python.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "app-python.serviceAccountName" . | default "default" }}
      imagePullSecrets:
        {{- with .Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      securityContext:
        {{- with .Values.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      initContainers:
        - name: init-container
          image: busybox
          command: ["sh", "-c", "echo 'Init Container running' && sleep 1"]
          volumeMounts:
            - name: app-volume
              mountPath: /data
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          envFrom:
            - configMapRef:
                name: demo-config
          env:
            - name: MY_PASSWORD
              value: "dummy-value"
            - name: DUMMY_ENV
              value: "SOME_DUMMY_ENV"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data-volume
              mountPath: /data
      volumes: []
      nodeSelector:
        {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      affinity:
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      tolerations:
        {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

  volumeClaimTemplates:
    - metadata:
        name: data-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.volumeClaimTemplate.requestStorage }}
