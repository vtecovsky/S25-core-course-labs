name: CI for Python app

on:
  push:
    paths:
      - "app_python/**"
  pull_request:
    paths:
      - "app_python/**"
      - ".github/workflows/ci-python.yaml"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd app_python
          pip install --cache-dir ~/.cache/pip -r requirements.txt

      - name: Lint
        run: |
          cd app_python
          ruff check .

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd app_python
          pip install --cache-dir ~/.cache/pip -r requirements.txt

      - name: Test
        run: |
          cd app_python
          pytest

  snyk-check:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - name: Snyk Security Scan
        uses: snyk/actions/python-3.10@master
        with:
          args: --skip-unresolved app_python/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: snyk-check
    env:
      DOCKER_IMAGE_NAME: "app_python"
      DOCKER_TAG: "latest"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd app_python
          echo "Building Docker image: $DOCKER_IMAGE_NAME:$DOCKER_TAG"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME:$DOCKER_TAG .

      - name: Push Docker image
        run: |
          echo "Pushing Docker image: $DOCKER_IMAGE_NAME:$DOCKER_TAG"
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME:$DOCKER_TAG
